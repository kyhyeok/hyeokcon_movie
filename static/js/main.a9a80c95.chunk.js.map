{"version":3,"sources":["assets/Neumann.gif","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","imageUrl","rating","dated","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h4","ItemContainer","Divider","Overviwe","p","TrailerContainer","Trailer","opts","height","width","DetailPresenter","result","videos","backdrop_path","runtime","episode_run_time","genres","genre","index","name","original_language","href","imdb_id","videoId","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","Error","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9a80c95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Neumann.5da228dd.gif\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"df4c1ff21ed5ce7bc83e2f373f66ff0e\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  movieVideos: (id) =>\r\n    api.get(`movie/${id}/videos`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  showVideos: (id) =>\r\n    api.get(`tv/${id}/videos`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term\r\n      }\r\n    })\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 15px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 50px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ color, text }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 4px;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, dated, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/Neumann.gif\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{dated}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  dated: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Hyeokcon-Movie</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying?.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                dated={movie?.release_date && movie.release_date}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming?.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                dated={movie?.release_date && movie.release_date}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular?.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                dated={movie?.release_date && movie.release_date}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport { movieApi } from \"../../api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, loading, error } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Hyeokcon-MOvie</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated?.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                dated={show?.first_air_date && show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular?.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                dated={show?.first_air_date && show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday?.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                dated={show?.first_air_date && show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport { tvApi } from \"../../api\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  error,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Hyeokcon-Movie</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResult?.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResult.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                dated={movie?.release_date && movie.release_date}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResult?.length > 0 && (\r\n          <Section title=\"Tv Show Results\">\r\n            {tvResult.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                dated={show?.first_air_date && show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#e74c3c\" />}\r\n    {tvResult?.length === 0 && movieResult?.length === 0 && (\r\n      <Message color=\"#95a5a6\" text=\"Nothing found\" />\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult: PropTypes.array,\r\n  tvResult: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResult: null,\r\n    tvResult: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResult }\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResult }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResult,\r\n        tvResult\r\n      });\r\n      this.setState({ loading: true });\r\n    } catch {\r\n      this.setState({ error: \"Can't  find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResult, tvResult, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResult}\r\n        tvResult={tvResult}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: #fff;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%inherit;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(20, 20, 20, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes, { exact } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Youtube from \"react-youtube\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overviwe = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst TrailerContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 5px;\r\n`;\r\n\r\nconst Trailer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst opts = {\r\n  height: \"200\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst DetailPresenter = ({ result, videos, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Loading | Hyeokcon-Movie</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Container>\r\n        <Helmet>\r\n          <title>\r\n            {result?.original_title\r\n              ? result.original_title\r\n              : result.original_name}{\" \"}\r\n            | Hyeokcon-Movie\r\n          </title>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result?.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../assets/Neumann.gif\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>\r\n              {result?.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                created_at :{\" \"}\r\n                {result?.release_date\r\n                  ? result.release_date\r\n                  : result.first_air_date}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                runingTime :{\" \"}\r\n                {result?.runtime ? result.runtime : result.episode_run_time} min\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                genres :{\" \"}\r\n                {result?.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                language :{\" \"}\r\n                {result?.original_language && result.original_language}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                <a\r\n                  href={\r\n                    result?.imdb_id\r\n                      ? `https://www.imdb.com/title/${result.imdb_id}`\r\n                      : \"/\"\r\n                  }\r\n                  target=\"blank\"\r\n                >\r\n                  IMDB\r\n                </a>\r\n              </Item>\r\n              <TrailerContainer>\r\n                <Trailer>\r\n                  {videos?.results &&\r\n                    videos?.results.map((result) => (\r\n                      <Youtube videoId={result.key} opts={opts} />\r\n                    ))}{\" \"}\r\n                </Trailer>\r\n              </TrailerContainer>\r\n            </ItemContainer>\r\n            <Overviwe>{result?.overview && result.overview}</Overviwe>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    ) : (\r\n      <Message text={error} color=\"#e74c3c\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      results: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    let results = null;\r\n\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n        ({ data: results } = await movieApi.movieVideos(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n        ({ data: results } = await tvApi.showVideos(parsedId));\r\n      }\r\n      throw Error();\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result, results });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, results, loading, error } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        videos={results}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color: #fff;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}